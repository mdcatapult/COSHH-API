stages:
  - test-lint-build
  - publish
  - release-api
  - release-ui

default:
  tags:
    - wopr

test-lint-build-ui:
  stage: test-lint-build
  image: registry.mdcatapult.io/informatics/docker-images/ci/node
  before_script:
    - cd ui
    - apt-get -yqq update && apt-get upgrade -yqq chromium libxss1 xvfb
    - export CHROME_BIN=/usr/bin/chromium
    - npm install
  script:
    - npm run test:ci
    - npm run build
  coverage: /Lines\s+:\s(\d+\.?\d*)%\s\(\s\d+\/\d+\s\)/
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

test-lint-build-api:
  stage: test-lint-build
  image:
    name: registry.mdcatapult.io/informatics/docker-images/ci/golang
  services:
    - postgres:10.11
  variables:
    POSTGRES_DB: coshh
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
  before_script:
    - apt-get update && apt-get install -yq postgresql postgresql-contrib
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f ./db/init.sql
  script:
    - cd api
    - go vet ./...
    - go test -v ./... -p 1

  except:
    refs:
      - master
      - tags
    variables:
      - "$CI_COMMIT_MESSAGE =~ /^Setting version to.*/"


publish-api:
  stage: publish
  tags:
    - wopr
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint:
      - ''
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - >
      /kaniko/executor
      --context $CI_PROJECT_DIR/api
      --build-arg VERSION_HASH=$CI_COMMIT_SHORT_SHA
      --destination $CI_REGISTRY_IMAGE/api:$CI_COMMIT_REF_SLUG
      --dockerfile $CI_PROJECT_DIR/api/Dockerfile
  except:
    refs:
      - master
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

publish-api-master:
  stage: publish
  tags:
    - wopr
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint:
      - ''
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - >
      /kaniko/executor
      --context $CI_PROJECT_DIR/api
      --build-arg VERSION_HASH=$CI_COMMIT_SHORT_SHA
      --destination $CI_REGISTRY_IMAGE/api:$CI_COMMIT_REF_NAME
      --destination $CI_REGISTRY_IMAGE/api:latest
      --dockerfile $CI_PROJECT_DIR/api/Dockerfile
  only:
    refs:
      - tags
    variables:
      - "$CI_COMMIT_MESSAGE =~ /^Setting version to.*/"


publish-ui:
  stage: publish
  tags:
    - wopr
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint:
      - ''
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - >
      /kaniko/executor
      --context $CI_PROJECT_DIR/ui
      --build-arg VERSION_HASH=$CI_COMMIT_SHORT_SHA
      --destination $CI_REGISTRY_IMAGE/ui:$CI_COMMIT_REF_SLUG
      --dockerfile $CI_PROJECT_DIR/ui/Dockerfile
  except:
    refs:
      - master
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

publish-ui-master:
  stage: publish
  tags:
    - wopr
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint:
      - ''
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - >
      /kaniko/executor
      --context $CI_PROJECT_DIR/ui
      --build-arg VERSION_HASH=$CI_COMMIT_SHORT_SHA
      --destination $CI_REGISTRY_IMAGE/ui:$CI_COMMIT_REF_NAME
      --destination $CI_REGISTRY_IMAGE/ui:latest
      --dockerfile $CI_PROJECT_DIR/ui/Dockerfile
  only:
    refs:
      - tags
    variables:
      - "$CI_COMMIT_MESSAGE =~ /^Setting version to.*/"


release-api:
  stage: release-api
  image: registry.mdcatapult.io/informatics/docker-images/ci/golang
  script:
    - release.sh
  only:
    refs:
      - master
  except:
    variables:
      - "$CI_COMMIT_MESSAGE =~ /^Setting version to.*/"

release-ui:
  stage: release-ui
  image: registry.mdcatapult.io/informatics/docker-images/ci/node
  tags:
    - wopr
  script:
    - git checkout master; git pull
    - cd ui
    - /scripts/release.sh
  only:
    refs:
     - master
  except:
    variables:
      - "$CI_COMMIT_MESSAGE =~ /^Setting version to.*/"
